# Build and run tests

name: build

on:
  push:
    branches: master
  pull_request:
    branches: master

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    env:
      OPENSSL_BRANCH: OpenSSL_1_1_1i
      BEE2_BRANCH: master
      local: ${{github.workspace}}/build
    steps:
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11' 
    - name: Install lcov
      run: sudo apt install -y lcov
    - name: Get source
      uses: actions/checkout@v3
    - name: Get Bee2 and OpenSSL
      run: |
        git submodule update --init --remote
        git clone -b ${OPENSSL_BRANCH} --depth 1 https://github.com/openssl/openssl.git
    - name: Build Bee2
      working-directory: ${{github.workspace}}/bee2
      run: |
        mkdir build && cd build
        cmake -DCMAKE_BUILD_TYPE=Release \
          -DBUILD_PIC=ON -DCMAKE_INSTALL_PREFIX=${local} ..
        make > build.log 2>&1 || (cat build.log && exit 1)
        make install > build.log 2>&1 || (cat build.log && exit 1)
        ls -la ${local}/lib/libbee2_static.a
    - name: Patch OpenSSL
      working-directory: ${{github.workspace}}/openssl
      run: |
        git apply ../btls/patch/${OPENSSL_BRANCH}.patch
        cp ../btls/btls.c ./ssl/
        cp ../btls/btls.h ./ssl/
    - name: Build OpenSSL
      working-directory: ${{github.workspace}}/openssl
      run: |
        mkdir build && cd build
        ../config shared -d --prefix=${local} --openssldir=${local}
        make -j$(nproc) all > build.log 2>&1 || (cat build.log && exit 1)
        make install > build.log 2>&1 || (cat build.log && exit 1)
        ls -la $local/lib/libcrypto.a
        ls -la $local/lib/libssl.a
        ls -la $local/lib/libcrypto.so
        ls -la $local/lib/libssl.so
        ls -la $local/bin/openssl
    - name: Build Bee2evp
      working-directory: ${{github.workspace}}/build
      run: |
        cmake -DCMAKE_BUILD_TYPE=Coverage \
          -DBEE2_LIBRARY_DIRS=${local}/lib -DBEE2_INCLUDE_DIRS=${local}/include \
          -DOPENSSL_LIBRARY_DIRS=${local}/lib -DOPENSSL_INCLUDE_DIRS=${local}/include \
          -DLIB_INSTALL_DIR=${local}/lib -DCMAKE_INSTALL_PREFIX=${local} ..
        make > build.log 2>&1 || (cat build.log && exit 1)
        make install > build.log 2>&1 || (cat build.log && exit 1)
        ls -la $local/lib/libbee2evp.so
    - name: Attach Bee2evp
      run: |
        mv ${local}/openssl.cnf.dist ${local}/openssl.cnf
        sed -i "/\[ new\_oids\ ]/i openssl_conf = openssl_init\n[ openssl_init ]\nengines = engine_section\n[ engine_section ]\nbee2evp = bee2evp_section\n[ bee2evp_section ]\nengine_id = bee2evp\ndynamic_path = ${local}/lib/libbee2evp.so\ndefault_algorithms = ALL" ${local}/openssl.cnf
    - name: Test Bee2evp
      working-directory: ${{github.workspace}}/build
      continue-on-error: true
      run: |
        export LD_LIBRARY_PATH="${local}/lib:${LD_LIBRARY_PATH:-}"
        cp -a ../test/. .
        lcov -c -i -d . -o coverage_base.info
        python --version
        python test.py
    - name: Upload coverage report to Codecov
      working-directory: ${{github.workspace}}/build
      run: |
        cat s_log.txt
        cat c_log.txt
        lcov -c -d . -o coverage_test.info
        lcov -a coverage_base.info -a coverage_test.info -o coverage.info
        LD_LIBRARY_PATH=$(echo "$LD_LIBRARY_PATH" | sed -e "s|${local}/lib:||")
        bash <(curl -s https://codecov.io/bash) -f coverage.info
